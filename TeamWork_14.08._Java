* Megija's code.
```
package com.datorium.Datorium.API.Controllers;

import com.datorium.Datorium.API.DTOs.User; // instead of User it's possible to use * which imports all DTOs
import com.datorium.Datorium.API.Services.UserService;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/user")
public class UserController {

    private UserService userService;
    public UserController(){
        userService = new UserService();
    }
    //CRUD - Create, Read, Update, Delete
    //AddUser, GetUser, UpdateUser, DeleteUser

    @PostMapping("/add") // localhost:8080/add --> localhost:8080/user/add
    public int add(@RequestBody User user){
        return userService.add(user);
    }

    @GetMapping("/get") // localhost:8080/user/get
    public List<User> get(){
        return userService.get();
    }
}
```
```
package com.datorium.Datorium.API.Repo;

import com.datorium.Datorium.API.DTOs.User;

import java.util.ArrayList;
import java.util.List;

public class UserRepo {

    private ArrayList<User> users = new ArrayList<>();

    public int add(User user){
        users.add(user);
        return users.size();
    }
    public List<User> get(){
        return new ArrayList<>(users);
    }
}
```
```
package com.datorium.Datorium.API.Services;

import com.datorium.Datorium.API.DTOs.User;
import com.datorium.Datorium.API.Repo.UserRepo;

import java.util.List;

public class UserService {
    private UserRepo userRepo;

    public UserService() {
       userRepo = new UserRepo();
    }
    public int add(User user){
        return userRepo.add(user);
    }
    public List<User> get(){
        return userRepo.get();
    }
}
```


